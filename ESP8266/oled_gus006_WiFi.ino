#include <Wire.h>
#include <Adafruit_GFX.h>
#include <ESP_Adafruit_SSD1306.h>
#include <ESP8266WiFi.h>
#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);
#define SSID "xxxxx"                              // insert your SSID
#define PASS "xxxxx"                              // insert your password
//Imagen o Logo

const unsigned char img [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x30, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x07, 0x00, 0x01, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
0x38, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
0x3E, 0x00, 0x3C, 0x01, 0xE0, 0x00, 0x07, 0x80, 0x07, 0xC0, 0x3E, 0x18, 0x08, 0xFF, 0x83, 0xC0,
0x3E, 0x00, 0x7C, 0x03, 0xF0, 0x00, 0x77, 0xC0, 0x0F, 0xC0, 0x3F, 0x18, 0x3D, 0xFF, 0xE7, 0xC0,
0x37, 0x00, 0xEC, 0x00, 0x18, 0x00, 0xE7, 0xE0, 0x1F, 0xC0, 0x03, 0x98, 0xFB, 0xC1, 0xFE, 0x00,
0x33, 0x01, 0xEC, 0x1F, 0xF8, 0x03, 0xC7, 0x70, 0x1D, 0xC1, 0xFF, 0x9B, 0xE3, 0x80, 0xFE, 0x00,
0x31, 0x81, 0xCC, 0xFF, 0xF8, 0x07, 0x87, 0x38, 0x39, 0xCF, 0xFF, 0x9F, 0x83, 0xFF, 0xFC, 0x00,
0x30, 0xC3, 0x8E, 0xFF, 0xF8, 0x1E, 0x07, 0x3C, 0x71, 0xCF, 0x07, 0x9F, 0x03, 0xFF, 0xFC, 0x00,
0x30, 0xF7, 0x0F, 0xE0, 0x38, 0x78, 0x07, 0x0C, 0xE1, 0xDC, 0x03, 0x9F, 0xC3, 0x80, 0x0C, 0x00,
0x30, 0x7E, 0x0F, 0xE0, 0x39, 0xF0, 0x07, 0x07, 0xC1, 0xDC, 0x03, 0x98, 0xF3, 0x80, 0x0C, 0x00,
0x30, 0x3E, 0x0C, 0xFF, 0xFB, 0xFF, 0xF7, 0x07, 0x81, 0xCF, 0xFF, 0x98, 0x3F, 0xF8, 0x0C, 0x00,
0x30, 0x1C, 0x04, 0x7F, 0xF1, 0xFF, 0xF6, 0x03, 0x01, 0xC7, 0xFE, 0x10, 0x1C, 0xF8, 0x0C, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0xC0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x1C, 0x00,
0x03, 0xF0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x3E, 0x00,
0x07, 0xF8, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x7F, 0x00,
0x07, 0x3F, 0xFF, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x07, 0xFF, 0xE3, 0x00,
0x07, 0x1F, 0xFF, 0x83, 0x9F, 0xC1, 0xFF, 0xFF, 0xFC, 0x3F, 0xF3, 0xEF, 0x0F, 0xFF, 0xE3, 0x00,
0x07, 0x3F, 0xFF, 0x83, 0x9F, 0x81, 0xFF, 0xFF, 0xF8, 0x1F, 0xF3, 0xEF, 0x0F, 0xFF, 0xE3, 0x00,
0x07, 0xF8, 0x01, 0x83, 0x9F, 0x80, 0xFF, 0xFF, 0xF0, 0x1F, 0xF3, 0xEF, 0x0E, 0x00, 0x7F, 0x00,
0x03, 0xF0, 0x01, 0x83, 0x9F, 0x80, 0xFF, 0xFF, 0xF0, 0x1F, 0xF3, 0xEF, 0x0E, 0x00, 0x7F, 0x00,
0x00, 0xC0, 0x01, 0xFF, 0x9F, 0x80, 0xFF, 0xFF, 0xF0, 0x1F, 0xF3, 0xEF, 0xFE, 0x00, 0x1C, 0x00,
0x00, 0x00, 0x01, 0xFF, 0x9F, 0x81, 0xFF, 0xFF, 0xF8, 0x1F, 0xF3, 0xEF, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xFF, 0x9F, 0xC3, 0xFF, 0xFF, 0xFC, 0x3F, 0xF3, 0xEF, 0xFE, 0x00, 0x00, 0x00,
0x01, 0xE0, 0x00, 0x03, 0x9F, 0xE7, 0xFF, 0x0F, 0xFE, 0x7F, 0xF3, 0xEF, 0x00, 0x00, 0x3E, 0x00,
0x03, 0xF0, 0x00, 0x03, 0x9F, 0xE7, 0xFE, 0xE7, 0xFE, 0x7F, 0xF3, 0xEF, 0x00, 0x00, 0x7F, 0x00,
0x07, 0xFC, 0x00, 0x03, 0x9F, 0xE7, 0xFC, 0xF7, 0xFE, 0x7F, 0xF3, 0xEF, 0x00, 0x00, 0xE3, 0x00,
0x07, 0x1F, 0xF8, 0x03, 0x9F, 0xE7, 0xFD, 0xF7, 0xFE, 0x7E, 0x03, 0xEF, 0xFF, 0xFF, 0xE3, 0x00,
0x07, 0x1F, 0xF8, 0x03, 0x9F, 0xE7, 0xFC, 0xF7, 0xFE, 0x7E, 0x7F, 0xEF, 0xFF, 0xFF, 0xE3, 0x00,
0x07, 0x38, 0x38, 0x03, 0x9F, 0xE7, 0xFE, 0x4F, 0xFE, 0x7E, 0x7F, 0xEF, 0x00, 0x00, 0x77, 0x00,
0x03, 0xF0, 0x38, 0x03, 0x9F, 0xE7, 0xFF, 0x1F, 0xFE, 0x7E, 0x7F, 0xEF, 0x00, 0x00, 0x7F, 0x00,
0x01, 0xF0, 0x38, 0x03, 0x9F, 0xE7, 0xFF, 0xBF, 0xFE, 0x7E, 0x7F, 0xEF, 0x00, 0x00, 0x3E, 0x00,
0x00, 0x00, 0x3F, 0xFF, 0x9F, 0xE7, 0xFF, 0xBF, 0xFE, 0x7E, 0x7F, 0xEF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3F, 0xFF, 0x9F, 0xE7, 0xFF, 0xBF, 0xFE, 0x7E, 0x7F, 0xEF, 0xFF, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x9F, 0xE7, 0xFF, 0xBF, 0xFE, 0x7E, 0x7F, 0xEF, 0xFF, 0xE0, 0x00, 0x00,
0x01, 0xE0, 0x00, 0x03, 0x9F, 0xE7, 0xFF, 0xBF, 0xC0, 0x7E, 0x7F, 0xEF, 0x00, 0x60, 0x3E, 0x00,
0x03, 0xF0, 0x00, 0x03, 0x9F, 0xE7, 0xFF, 0xBF, 0xC0, 0x7E, 0x7F, 0xEF, 0x00, 0x60, 0x7F, 0x00,
0x07, 0xF8, 0x00, 0x03, 0x9F, 0xE7, 0xFF, 0xBF, 0xCF, 0xFE, 0x7F, 0xEF, 0x00, 0x60, 0x77, 0x00,
0x07, 0x3F, 0xFF, 0xFF, 0x9F, 0xE7, 0xFF, 0xBF, 0xCF, 0xFE, 0x7F, 0xEF, 0x00, 0x7F, 0xE3, 0x00,
0x07, 0x1F, 0xFF, 0xFF, 0x9F, 0xE7, 0xFF, 0xBF, 0xCF, 0xFE, 0x7F, 0xEF, 0x00, 0x7F, 0xE3, 0x00,
0x07, 0x38, 0x00, 0x07, 0x9F, 0xE3, 0xFF, 0xBF, 0xCF, 0xFE, 0x7F, 0xEF, 0x00, 0x00, 0xFF, 0x00,
0x03, 0xF0, 0x00, 0x03, 0x9F, 0xE0, 0x3F, 0xBF, 0xCF, 0xFE, 0x7F, 0xEF, 0x00, 0x00, 0x7F, 0x00,
0x01, 0xE0, 0x00, 0x03, 0x9F, 0xF0, 0x3F, 0xBF, 0xCF, 0xFE, 0x7F, 0xEF, 0x00, 0x00, 0x3E, 0x00,
0x00, 0x00, 0x01, 0xFF, 0x9F, 0xFF, 0x3F, 0xBF, 0xCF, 0xFE, 0x3F, 0xEF, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xFF, 0x9F, 0xFF, 0x3F, 0xBF, 0xCF, 0xF8, 0x1F, 0xEF, 0xFE, 0x00, 0x00, 0x00,
0x00, 0xC0, 0x01, 0xFF, 0x9F, 0xFF, 0x3F, 0xBF, 0xCF, 0xF1, 0x8F, 0xEF, 0xFE, 0x00, 0x1C, 0x00,
0x03, 0xF0, 0x01, 0x83, 0x9F, 0xFF, 0x3F, 0xBF, 0xCF, 0xF3, 0xCF, 0xEF, 0x0E, 0x00, 0x7F, 0x00,
0x07, 0xF8, 0x01, 0x83, 0x9F, 0xFF, 0x3F, 0xBF, 0xCF, 0xF1, 0xCF, 0xEF, 0x0E, 0x00, 0x77, 0x00,
0x07, 0x3F, 0xFF, 0x83, 0x9F, 0xFF, 0x3F, 0xBF, 0xCF, 0xF8, 0x9F, 0xEF, 0x0F, 0xFF, 0xE3, 0x00,
0x07, 0x1F, 0xFF, 0x83, 0x9F, 0xFF, 0x3F, 0xBF, 0xCF, 0xF8, 0x1F, 0xEF, 0x0F, 0xFF, 0xE3, 0x00,
0x07, 0x3F, 0xFF, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x07, 0xFF, 0xE3, 0x00,
0x07, 0xF8, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x7F, 0x00,
0x03, 0xF0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x3E, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  // set display
  //display.begin(SSD1306_SWITCHCAPVCC, 0x78>>1);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3c);
  display.display();
  delay(2000);
  display.clearDisplay();
  
  WiFi.begin(SSID, PASS);                         // Connect to WiFi network
  while (WiFi.status() != WL_CONNECTED) {         // Wait for connection
    delay(500);
    Serial.print(".");
  }

  Serial.print("SSID : ");                        // prints SSID in monitor
  Serial.println(SSID); // to monitor
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(15,0);
  display.println("SSID");
  display.setCursor(0,7);
  display.println(SSID);     // prints SSID on OLED   
  display.display();
  delay(2000);
  display.clearDisplay();
  
 
  char result[16];
  sprintf(result, "%3d.%3d.%3d.%3d", WiFi.localIP()[0], WiFi.localIP()[1], WiFi.localIP()[2], WiFi.localIP()[3]);
  Serial.println();Serial.println(result);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(10,0);
  display.println(result);     // prints SSID on OLED   
  display.display();
  delay(2000);
  display.clearDisplay();
/*
  Serial.println("WebServer Listo!   ");
  sendStrXY("WebServer Listo!",4,0);              // OLED first message
  sendStrXY("Arduino Mexico!",6,0);              // OLED first message 
  Serial.println(WiFi.localIP());                 // Serial monitor prints localIP
  Serial.print(analogRead(A0));
  */
  int test = 13;
  pinMode(test,OUTPUT);
  digitalWrite(test,HIGH);
  delay(1000);
  digitalWrite(test,LOW);
  delay(1000);
  digitalWrite(test,HIGH);
  delay(1000);
  digitalWrite(test,LOW);
  
}

void loop() {
  // put your main code here, to run repeatedly:

  // draw logo
  display.drawBitmap(0, 0, img, 128, 72, 1);
  display.display();
  delay(2000);
  display.clearDisplay();

  // draw many lines
  testdrawline();
  display.display();
  delay(500);
  display.clearDisplay();

  // text display tests
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(22,0);
  display.println("Genuino");
  //display.setTextSize(2);
  //display.setTextColor(WHITE);
  //display.setCursor(35,0);
  display.setCursor(15,30);
  display.println("Day 2016"); 
  display.display();
  delay(2000);
  display.clearDisplay();
// text display tests
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(20,0);
  display.println("GUSTAVO");
  //display.setTextSize(2);
  //display.setTextColor(WHITE);
  display.setCursor(18,30);
  display.println("REYNAGA"); 
  display.display();
  delay(2000);
  display.clearDisplay();

  // draw many lines
  testdrawline2();
  display.display();
  delay(2000);
  display.clearDisplay();

  Serial.print("SSID : ");                        // prints SSID in monitor
  Serial.println(SSID); // to monitor
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(25,0);
  display.println("SSID");
  display.setTextSize(1);
  display.setCursor(0,30);
  display.println(SSID);     // prints SSID on OLED   
  display.display();
  delay(2000);
  display.clearDisplay();
   
  char result[16];
  sprintf(result, "%3d.%3d.%3d.%3d", WiFi.localIP()[0], WiFi.localIP()[1], WiFi.localIP()[2], WiFi.localIP()[3]);
  Serial.println();Serial.println(result);
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(25,0);
  display.println("Ip:");
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(15,30);
  display.println(result);     // prints IP on OLED   
  display.display();
  delay(2000);
  display.clearDisplay();

 }

void testdrawline() {  
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(0, 0, i, display.height()-1, WHITE);
    display.display();
    delay(1);
  }
  for (int16_t i=0; i<display.height(); i+=4) {
    display.drawLine(0, 0, display.width()-1, i, WHITE);
    display.display();
    delay(1);
  }
  delay(250);
 /* 
  display.clearDisplay();
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(0, display.height()-1, i, 0, WHITE);
    display.display();
    delay(1);
  }
  for (int16_t i=display.height()-1; i>=0; i-=4) {
    display.drawLine(0, display.height()-1, display.width()-1, i, WHITE);
    display.display();
    delay(1);
  }
  delay(250);
  
  display.clearDisplay();
  for (int16_t i=display.width()-1; i>=0; i-=4) {
    display.drawLine(display.width()-1, display.height()-1, i, 0, WHITE);
    display.display();
    delay(1);
  }
  for (int16_t i=display.height()-1; i>=0; i-=4) {
    display.drawLine(display.width()-1, display.height()-1, 0, i, WHITE);
    display.display();
    delay(1);
  }
  delay(250);

  display.clearDisplay();
  for (int16_t i=0; i<display.height(); i+=4) {
    display.drawLine(display.width()-1, 0, 0, i, WHITE);
    display.display();
    delay(1);
  }
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(display.width()-1, 0, i, display.height()-1, WHITE); 
    display.display();
    delay(1);
  }
  delay(250);
  */
}

void testdrawline2() {  
  display.clearDisplay();
  for (int16_t i=0; i<display.height(); i+=4) {
    display.drawLine(display.width()-1, 0, 0, i, WHITE);
    display.display();
    delay(1);
  }
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(display.width()-1, 0, i, display.height()-1, WHITE); 
    display.display();
    delay(1);
  }
  delay(250);
}
